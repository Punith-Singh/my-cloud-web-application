apiVersion: v1
kind: Namespace
metadata:
  name: cloudtodo
  labels:
    name: cloudtodo
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cloudtodo-app
  namespace: cloudtodo
  labels:
    app: cloudtodo
    version: v1.0.0
spec:
  replicas: 3
  selector:
    matchLabels:
      app: cloudtodo
  template:
    metadata:
      labels:
        app: cloudtodo
        version: v1.0.0
    spec:
      containers:
      - name: cloudtodo
        image: icr.io/cloudtodo/app:latest
        ports:
        - containerPort: 5000
          name: http
        env:
        - name: NODE_ENV
          value: "production"
        - name: APP_VERSION
          value: "v1.0.0"
        - name: IBM_CLOUD_REGION
          value: "us-south"
        - name: KUBERNETES_CLUSTER_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health/live
            port: 5000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health/ready
            port: 5000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        securityContext:
          runAsNonRoot: true
          runAsUser: 1001
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
---
apiVersion: v1
kind: Service
metadata:
  name: cloudtodo-service
  namespace: cloudtodo
  labels:
    app: cloudtodo
spec:
  selector:
    app: cloudtodo
  ports:
  - name: http
    port: 80
    targetPort: 5000
    protocol: TCP
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: cloudtodo-ingress
  namespace: cloudtodo
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
spec:
  tls:
  - hosts:
    - cloudtodo.example.com
    secretName: cloudtodo-tls
  rules:
  - host: cloudtodo.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: cloudtodo-service
            port:
              number: 80
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: cloudtodo-hpa
  namespace: cloudtodo
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: cloudtodo-app
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80